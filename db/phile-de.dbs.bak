<?xml version="1.0" encoding="UTF-8" ?>
<project name="soro-sales" id="Project_917604" template="Default" database="PostgreSQL" >
	<schema name="pde" catalogname="phile" schemaname="pde" >
		<table name="artifact" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" >
				<defo>shard_1.id_generator()</defo>
			</column>
			<column name="created_at" type="timestamp" length="29" decimal="6" jt="93" mandatory="y" >
				<defo>now()</defo>
			</column>
			<column name="updated_at" type="timestamp" length="29" decimal="6" jt="93" mandatory="y" />
			<column name="name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="artifact_type_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="schema_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="description" type="text" decimal="0" jt="12" mandatory="y" >
				<defo>&#039;&#039;::text</defo>
			</column>
			<index name="pk_artifact" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<constraint name="artifact_name_check" >
				<string>name &lt;&gt;&#039;&#039;::text</string>
			</constraint>
			<fk name="fk_artifact_type" to_schema="pde" to_table="artifact_type" >
				<fk_column name="artifact_type_id" pk="id" />
			</fk>
			<fk name="fk_artifact_schema" to_schema="pde" to_table="schema" >
				<fk_column name="schema_id" pk="id" />
			</fk>
		</table>
		<table name="artifact_relationship" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" >
				<defo>shard_1.id_generator()</defo>
			</column>
			<column name="parent_artifact_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="child_artifact_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="pk_artifact_relationship" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<fk name="fk_artifact_relationship_child" to_schema="pde" to_table="artifact" >
				<fk_column name="child_artifact_id" pk="id" />
			</fk>
			<fk name="fk_artifact_relationship_parent" to_schema="pde" to_table="artifact" >
				<fk_column name="parent_artifact_id" pk="id" />
			</fk>
		</table>
		<table name="artifact_type" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" >
				<defo>shard_1.id_generator()</defo>
			</column>
			<column name="name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="execution_order" type="integer" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="properties" type="jsonb" decimal="0" jt="1111" mandatory="y" >
				<defo>&#039;{}&#039;::jsonb</defo>
			</column>
			<column name="ddl_up_template" type="text" decimal="0" jt="12" />
			<column name="ddl_down_template" type="text" decimal="0" jt="12" />
			<index name="pk_pde_artifact_ype" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
		</table>
		<table name="artifact_type_relationship" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" >
				<defo>shard_1.id_generator()</defo>
			</column>
			<column name="parent_artifact_type_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="child_artifact_type_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="pk_artifact_type_relationship" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<fk name="fk_artifact_type_relationship_child" to_schema="pde" to_table="artifact_type" >
				<fk_column name="child_artifact_type_id" pk="id" />
			</fk>
			<fk name="fk_artifact_type_relationship_parent" to_schema="pde" to_table="artifact_type" >
				<fk_column name="parent_artifact_type_id" pk="id" />
			</fk>
		</table>
		<table name="major" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" >
				<defo>shard_1.id_generator()</defo>
			</column>
			<column name="project_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="revision" type="integer" length="10" decimal="0" jt="4" />
			<column name="name" type="text" decimal="0" jt="12" mandatory="y" />
			<index name="pk_pde_major" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<constraint name="major_name_check" >
				<string>name &lt;&gt;&#039;&#039;::text</string>
			</constraint>
			<fk name="fk_major_project" to_schema="pde" to_table="pde_project" >
				<fk_column name="project_id" pk="id" />
			</fk>
		</table>
		<table name="minor" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" >
				<defo>shard_1.id_generator()</defo>
			</column>
			<column name="major_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="revision" type="integer" length="10" decimal="0" jt="4" />
			<column name="release_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="number" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="name" type="text" decimal="0" jt="12" mandatory="y" />
			<index name="pk_pde_minor" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<constraint name="minor_number_check" >
				<string>number &lt;&gt;&#039;&#039;::text</string>
			</constraint>
			<constraint name="minor_name_check" >
				<string>name &lt;&gt;&#039;&#039;::text</string>
			</constraint>
			<fk name="fk_minor_major" to_schema="pde" to_table="major" >
				<fk_column name="major_id" pk="id" />
			</fk>
			<fk name="fk_minor_release" to_schema="pde" to_table="release" >
				<fk_column name="release_id" pk="id" />
			</fk>
		</table>
		<table name="patch" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" >
				<defo>shard_1.id_generator()</defo>
			</column>
			<column name="minor_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="revision" type="integer" length="10" decimal="0" jt="4" />
			<column name="artifact_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="number" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="ddl_up" type="text" decimal="0" jt="12" mandatory="y" >
				<defo>&#039;&lt;ddl&gt;&#039;::text</defo>
			</column>
			<column name="ddl_up_working" type="text" decimal="0" jt="12" mandatory="y" >
				<defo>&#039;&lt;ddl&gt;&#039;::text</defo>
			</column>
			<column name="ddl_down" type="text" decimal="0" jt="12" mandatory="y" >
				<defo>&#039;&lt;ddl&gt;&#039;::text</defo>
			</column>
			<column name="ddl_down_working" type="text" decimal="0" jt="12" mandatory="y" >
				<defo>&#039;&lt;ddl&gt;&#039;::text</defo>
			</column>
			<column name="locked" type="bool" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo>false</defo>
			</column>
			<index name="pk_pde_patch" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<constraint name="patch_number_check" >
				<string>number &lt;&gt;&#039;&#039;::text</string>
			</constraint>
			<fk name="fk_patch_minor" to_schema="pde" to_table="minor" >
				<fk_column name="minor_id" pk="id" />
			</fk>
			<fk name="fk_patch_artifact" to_schema="pde" to_table="artifact" >
				<fk_column name="artifact_id" pk="id" />
			</fk>
		</table>
		<table name="pde_project" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" >
				<defo>shard_1.id_generator()</defo>
			</column>
			<column name="name" type="text" decimal="0" jt="12" mandatory="y" />
			<index name="pk_pde_pde_project" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<constraint name="pde_project_name_check" >
				<string>name &lt;&gt;&#039;&#039;::text</string>
			</constraint>
		</table>
		<table name="release" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" >
				<defo>shard_1.id_generator()</defo>
			</column>
			<column name="project_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="name" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="status" type="&quot;pde&quot;.&quot;release_status&quot;" decimal="0" jt="12" mandatory="y" >
				<defo>&#039;Development&#039;::pde.release_status</defo>
			</column>
			<column name="number" type="text" decimal="0" jt="12" mandatory="y" />
			<column name="ddl_up" type="text" decimal="0" jt="12" mandatory="y" >
				<defo>&#039;&lt;ddl&gt;&#039;::text</defo>
			</column>
			<column name="ddl_down" type="text" decimal="0" jt="12" mandatory="y" >
				<defo>&#039;&lt;ddl&gt;&#039;::text</defo>
			</column>
			<column name="parent_release_id" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="locked" type="bool" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo>false</defo>
			</column>
			<index name="pk_pde_release" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<constraint name="release_name_check" >
				<string>name &lt;&gt;&#039;&#039;::text</string>
			</constraint>
			<fk name="fk_release_project" to_schema="pde" to_table="pde_project" >
				<fk_column name="project_id" pk="id" />
			</fk>
			<fk name="fk_release_parent" to_schema="pde" to_table="release" >
				<fk_column name="parent_release_id" pk="id" />
			</fk>
		</table>
		<table name="schema" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" >
				<defo>shard_1.id_generator()</defo>
			</column>
			<column name="created_at" type="timestamp" length="29" decimal="6" jt="93" mandatory="y" >
				<defo>now()</defo>
			</column>
			<column name="name" type="text" decimal="0" jt="12" mandatory="y" />
			<index name="pk_schema" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
		</table>
		<table name="test" >
			<column name="id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" >
				<defo>shard_1.id_generator()</defo>
			</column>
			<column name="type" type="&quot;pde&quot;.&quot;test_type&quot;" decimal="0" jt="12" mandatory="y" >
				<defo>&#039;GraphQL&#039;::pde.test_type</defo>
			</column>
			<column name="name" type="text" decimal="0" jt="12" />
			<column name="script" type="text" decimal="0" jt="12" mandatory="y" >
				<defo>&#039;&lt;test ddl&gt;&#039;::text</defo>
			</column>
			<column name="script_working" type="text" decimal="0" jt="12" mandatory="y" >
				<defo>&#039;&lt;test ddl&gt;&#039;::text</defo>
			</column>
			<column name="minor_id" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="pk_pde_test" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<fk name="fk_test_minor" to_schema="pde" to_table="minor" >
				<fk_column name="minor_id" pk="id" />
			</fk>
		</table>
		<procedure name="artifact_type_children" id="Procedure_44d618f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pde.artifact_type_children(artifact_type pde.artifact_type)
 RETURNS SETOF pde.artifact_type
 LANGUAGE sql
 STABLE
AS $function$
  select ac.*
  from pde.artifact_type_relationship atr
  join pde.artifact_type ac on ac.id = atr.child_artifact_type_id
  where atr.parent_artifact_type_id = artifact_type.id
  ;
$function$
]]></string>
			<input_param name="id" jt="-5" type="int8" />
			<input_param name="name" jt="12" type="text" />
			<input_param name="ddl_up_template" jt="12" type="text" />
			<input_param name="ddl_down_template" jt="12" type="text" />
			<input_param name="execution_order" jt="4" type="int4" />
			<input_param name="properties" jt="1111" type="jsonb" />
			<input_param name="artifact_type" jt="1111" type="&quot;pde&quot;.&quot;artifact_type&quot;" />
		</procedure>
		<procedure name="build_development_release" id="Procedure_310474e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pde.build_development_release(_project_id bigint, _name text)
 RETURNS pde.release
 LANGUAGE plpgsql
 STRICT SECURITY DEFINER
AS $function$
DECLARE
  _development_release pde.release;
BEGIN
  IF _name IS NULL OR _name = '' THEN
    RAISE EXCEPTION 'Name cannot be empty';
  END IF;
  SELECT *
  INTO _development_release
  FROM pde.release
  WHERE project_id = _project_id
  AND status = 'Development';
  IF _development_release.id IS NOT NULL THEN
    RAISE EXCEPTION 'This project already has a development release';
  END IF;
  INSERT INTO pde.release(
    name
    ,number
    ,status
    ,ddl_up
    ,ddl_down
    ,project_id
    ,parent_release_id
    ,locked
  )
  SELECT
    _name
    ,'N/A.development'
    ,'Development'
    ,'<ddl_up>'
    ,'<ddl_down>'
    ,_project_id
    ,null
    ,false
  RETURNING *
  INTO _development_release
  ;
  return _development_release;
END;
$function$
]]></string>
			<input_param name="id" jt="-5" type="int8" />
			<input_param name="project_id" jt="-5" type="int8" />
			<input_param name="name" jt="12" type="text" />
			<input_param name="number" jt="12" type="text" />
			<input_param name="status" jt="1111" type="&quot;pde&quot;.&quot;release_status&quot;" />
			<input_param name="ddl_up" jt="12" type="text" />
			<input_param name="ddl_down" jt="12" type="text" />
			<input_param name="parent_release_id" jt="-5" type="int8" />
			<input_param name="locked" jt="-7" type="bool" />
			<input_param name="_project_id" jt="-5" type="int8" />
			<input_param name="_name" jt="12" type="text" />
		</procedure>
		<procedure name="defer_minor" id="Procedure_ac615" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pde.defer_minor(minor_id bigint)
 RETURNS pde.minor
 LANGUAGE plpgsql
 STRICT SECURITY DEFINER
AS $function$
DECLARE
  _minor pde.minor;
  _release pde.release;
BEGIN
  SELECT *
  INTO _minor
  FROM pde.minor
  WHERE id = minor_id
  ;
  IF _minor.id IS NULL THEN
    RAISE EXCEPTION 'Cannot defer because minor does not exist: %', minor_id;
  END IF;
  SELECT *
  INTO _release
  FROM pde.release
  WHERE id = _minor.release_id
  ;
  IF _release.status != 'Development' THEN
    RAISE EXCEPTION 'Cannot defer because patch is not in development release: %', minor_id;
  END IF;
  SELECT *
  INTO _release
  FROM pde.release
  WHERE project_id = _release.project_id
  AND status = 'Future'
  ;
  IF _release.status != 'Future' THEN
    RAISE EXCEPTION 'Cannot defer because future release does not exist: %', minor_id;
  END IF;
  
  UPDATE pde.minor SET
    release_id = _release.id
  WHERE id = minor_id
  RETURNING *
  INTO _minor
  ;
  return _minor;
END;
$function$
]]></string>
			<input_param name="id" jt="-5" type="int8" />
			<input_param name="name" jt="12" type="text" />
			<input_param name="major_id" jt="-5" type="int8" />
			<input_param name="release_id" jt="-5" type="int8" />
			<input_param name="revision" jt="4" type="int4" />
			<input_param name="number" jt="12" type="text" />
			<input_param name="minor_id" jt="-5" type="int8" />
		</procedure>
		<procedure name="fn_create_project_releases" id="Procedure_479af79" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pde.fn_create_project_releases()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
BEGIN
  INSERT INTO pde.release(
    project_id
    ,name
    ,number
    ,status
  )
  VALUES
    (
      NEW.id
      ,'Future'
      ,'9999.9999.9999'
      ,'Future'
    ),
    (
      NEW.id
      ,'Next'
      ,'Development'
      ,'Development'
    )
  ;
  RETURN NEW;
END; $function$
]]></string>
			<result_param name="returnValue" jt="1111" type="trigger" />
		</procedure>
		<procedure name="fn_timestamp_update_artifact" id="Procedure_35ccc71" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pde.fn_timestamp_update_artifact()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
  BEGIN
    NEW.updated_at = current_timestamp;
    RETURN NEW;
  END; $function$
]]></string>
			<result_param name="returnValue" jt="1111" type="trigger" />
		</procedure>
		<procedure name="fn_timestamp_update_minor" id="Procedure_3dd1412" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pde.fn_timestamp_update_minor()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
BEGIN
  NEW.number = (select lpad(mj.revision::text,4,'0') || '.' || lpad(NEW.revision::text,4,'0') from pde.major mj where mj.id = NEW.major_id);
  RETURN NEW;
END; $function$
]]></string>
			<result_param name="returnValue" jt="1111" type="trigger" />
		</procedure>
		<procedure name="fn_timestamp_update_patch" id="Procedure_4402f2c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pde.fn_timestamp_update_patch()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
BEGIN
  NEW.number = (select mi.number || '.' || lpad(NEW.revision::text,4,'0') from pde.minor mi where mi.id = NEW.minor_id);
  RETURN NEW;
END; $function$
]]></string>
			<result_param name="returnValue" jt="1111" type="trigger" />
		</procedure>
		<procedure name="fn_update_release_number" id="Procedure_43c8b3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pde.fn_update_release_number()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
BEGIN
  WITH max_patch_info AS (
    SELECT 
      max(p.id) max_patch_id
      ,r.id release_id
    FROM pde.patch p
    JOIN pde.minor m ON p.minor_id = m.id
    JOIN pde.release r ON r.id = m.release_id
    WHERE r.id = (SELECT release_id FROM pde.minor WHERE id = NEW.minor_id)
    GROUP BY r.id
  )
  UPDATE pde.release
  SET number = (
    SELECT 
      lpad(ma.revision::text,4,'0') || '.' || lpad(mi.revision::text,4,'0') || '.' || lpad(pa.revision::text,4,'0') || '.development'
    FROM max_patch_info mpi
    JOIN pde.patch pa ON mpi.max_patch_id = pa.id
    JOIN pde.minor mi ON pa.minor_id = mi.id
    JOIN pde.major ma ON mi.major_id = ma.id
  )
  FROM max_patch_info mpi
  WHERE id = mpi.release_id
  AND locked = false
  AND status = 'Development'
  ;
  RETURN NEW;
END; $function$
]]></string>
			<result_param name="returnValue" jt="1111" type="trigger" />
		</procedure>
		<procedure name="minor_schemas" id="Procedure_3be653d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pde.minor_schemas(minor pde.minor)
 RETURNS SETOF pde.schema
 LANGUAGE sql
 STABLE
AS $function$
  select s.*
  from pde.schema s
  join pde.artifact a on a.schema_id = s.id
  join pde.patch p on p.artifact_id = a.id and p.minor_id = minor.id
  ;
$function$
]]></string>
			<input_param name="id" jt="-5" type="int8" />
			<input_param name="created_at" jt="93" type="timestamp" />
			<input_param name="name" jt="12" type="text" />
			<input_param name="minor" jt="1111" type="&quot;pde&quot;.&quot;minor&quot;" />
		</procedure>
		<procedure name="promote_minor" id="Procedure_55343e7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pde.promote_minor(minor_id bigint)
 RETURNS pde.minor
 LANGUAGE plpgsql
 STRICT SECURITY DEFINER
AS $function$
DECLARE
  _minor pde.minor;
  _release pde.release;
BEGIN
  SELECT *
  INTO _minor
  FROM pde.minor
  WHERE id = minor_id
  ;
  IF _minor.id IS NULL THEN
    RAISE EXCEPTION 'Cannot promote because minor does not exist: %', minor_id;
  END IF;
  SELECT *
  INTO _release
  FROM pde.release
  WHERE id = _minor.release_id
  ;
  IF _release.status != 'Future' THEN
    RAISE EXCEPTION 'Cannot promote because patch is not in future release: %', _patch_id;
  END IF;
  UPDATE pde.minor SET
    release_id = (SELECT id FROM pde.release WHERE project_id = _release.project_id AND status = 'Development')
  WHERE id = minor_id
  RETURNING *
  INTO _minor
  ;
  return _minor;
END;
$function$
]]></string>
			<input_param name="id" jt="-5" type="int8" />
			<input_param name="name" jt="12" type="text" />
			<input_param name="major_id" jt="-5" type="int8" />
			<input_param name="release_id" jt="-5" type="int8" />
			<input_param name="revision" jt="4" type="int4" />
			<input_param name="number" jt="12" type="text" />
			<input_param name="minor_id" jt="-5" type="int8" />
		</procedure>
		<procedure name="release_display_name" id="Procedure_2ad4985" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pde.release_display_name(release pde.release)
 RETURNS text
 LANGUAGE sql
 STABLE
AS $function$
  select r.name || ' - ' || r.status::text
  from pde.release r
  ;
$function$
]]></string>
			<input_param name="release" jt="1111" type="&quot;pde&quot;.&quot;release&quot;" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="release_to_current" id="Procedure_193f604" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pde.release_to_current(_project_id bigint)
 RETURNS pde.release
 LANGUAGE plpgsql
 STRICT SECURITY DEFINER
AS $function$
DECLARE
  _staging_release pde.release;
  _current_release pde.release;
  _parent_release pde.release;
BEGIN
  SELECT *
  INTO _staging_release
  FROM pde.release
  WHERE project_id = _project_id
  AND status = 'Staging';
  IF _staging_release.id IS NULL THEN
    RAISE EXCEPTION 'NO STAGING RELEASE FOR PROJECT ID: %', _project_id;
  END IF;
  SELECT *
  INTO _parent_release
  FROM pde.release
  WHERE id = _staging_release.parent_release_id;
  UPDATE pde.release SET
    status = 'Historic'
  WHERE status = 'Current'
  AND project_id = _project_id
  ;
  UPDATE pde.release SET
    status = 'Current'
    ,number = replace(_parent_release.number, '.development', '')
  WHERE id = _staging_release.id
  RETURNING *
  INTO _current_release
  ;
  UPDATE pde.release SET
    status = 'Archived'
  WHERE id = _parent_release.id
  ;
--  PERFORM pde.build_development_release(_project_id);
  return _current_release;
END;
$function$
]]></string>
			<input_param name="id" jt="-5" type="int8" />
			<input_param name="project_id" jt="-5" type="int8" />
			<input_param name="name" jt="12" type="text" />
			<input_param name="number" jt="12" type="text" />
			<input_param name="status" jt="1111" type="&quot;pde&quot;.&quot;release_status&quot;" />
			<input_param name="ddl_up" jt="12" type="text" />
			<input_param name="ddl_down" jt="12" type="text" />
			<input_param name="parent_release_id" jt="-5" type="int8" />
			<input_param name="locked" jt="-7" type="bool" />
			<input_param name="_project_id" jt="-5" type="int8" />
		</procedure>
		<procedure name="release_to_staging" id="Procedure_419c960" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pde.release_to_staging(_project_id bigint)
 RETURNS pde.release
 LANGUAGE plpgsql
 STRICT SECURITY DEFINER
AS $function$
DECLARE
  _staging_release pde.release;
  _testing_release pde.release;
  _parent_release pde.release;
  _staging_release_count integer;
BEGIN
  SELECT *
  INTO _testing_release
  FROM pde.release
  WHERE project_id = _project_id
  AND status = 'Testing';
  IF _testing_release.id IS NULL THEN
    RAISE EXCEPTION 'NO TESTING RELEASE FOR PROJECT ID: %', _project_id;
  END IF;
  SELECT *
  INTO _parent_release
  FROM pde.release
  WHERE id = _testing_release.parent_release_id;
  UPDATE pde.release SET
    status = 'StagingDeprecated'
  WHERE status = 'Staging'
  AND project_id = _project_id
  ;
  _staging_release_count := (SELECT count(*) FROM pde.release WHERE parent_release_id = _parent_release.id); -- AND status = 'StagingDeprecated');
  UPDATE pde.release SET
    status = 'Staging'
    ,number = replace (_testing_release.number, 'testing', 'staging')
  WHERE id = _testing_release.id
  RETURNING *
  INTO _staging_release
  ;
  return _staging_release;
END;
$function$
]]></string>
			<input_param name="id" jt="-5" type="int8" />
			<input_param name="project_id" jt="-5" type="int8" />
			<input_param name="name" jt="12" type="text" />
			<input_param name="number" jt="12" type="text" />
			<input_param name="status" jt="1111" type="&quot;pde&quot;.&quot;release_status&quot;" />
			<input_param name="ddl_up" jt="12" type="text" />
			<input_param name="ddl_down" jt="12" type="text" />
			<input_param name="parent_release_id" jt="-5" type="int8" />
			<input_param name="locked" jt="-7" type="bool" />
			<input_param name="_project_id" jt="-5" type="int8" />
		</procedure>
		<procedure name="release_to_testing" id="Procedure_5de5908" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pde.release_to_testing(_project_id bigint)
 RETURNS pde.release
 LANGUAGE plpgsql
 STRICT SECURITY DEFINER
AS $function$
DECLARE
  _testing_release pde.release;
  _development_release pde.release;
  _testing_release_count integer;
BEGIN
  UPDATE pde.release SET
    status = 'TestingDeprecated'
  WHERE status = 'Testing'
  AND project_id = _project_id
  ;
  SELECT *
  INTO _development_release
  FROM pde.release
  WHERE project_id = _project_id
  AND status = 'Development';
  IF _development_release.id IS NULL THEN
    RAISE EXCEPTION 'NO DEVELOPMENT RELEASE FOR PROJECT ID: %', _project_id;
  END IF;
  _testing_release_count := (SELECT count(*) FROM pde.release WHERE parent_release_id = _development_release.id); -- AND status = 'TestingDeprecated');
  INSERT INTO pde.release(
    name
    ,number
    ,status
    ,ddl_up
    ,ddl_down
    ,project_id
    ,parent_release_id
    ,locked
  )
  SELECT
    _development_release.name
    ,(replace(_development_release.number, 'development', 'testing')||'.'||(_testing_release_count+1)::text)
    ,'Testing'
    ,_development_release.ddl_up
    ,_development_release.ddl_down
    ,_project_id
    ,_development_release.id
    ,true
  RETURNING *
  INTO _testing_release
  ;
  INSERT INTO pde.minor(
    major_id
    ,revision
    ,number
    ,name
    ,release_id
  )
  SELECT
    major_id
    ,revision
    ,number
    ,name
    ,_testing_release.id
  FROM pde.minor
  WHERE release_id = _development_release.id
  ;
  INSERT INTO pde.patch(
    minor_id
    ,revision
    ,artifact_id
    ,number
    ,ddl_up
    ,ddl_up_working
    ,ddl_down
    ,ddl_down_working
    ,locked
  )
  SELECT
    (SELECT id FROM pde.minor WHERE release_id = _testing_release.id AND number = m.number)
    ,p.revision
    ,p.artifact_id
    ,p.number
    ,p.ddl_up
    ,p.ddl_up_working
    ,p.ddl_down
    ,p.ddl_down_working
    ,true
  FROM pde.patch p
  JOIN pde.minor m on m.id = p.minor_id
  WHERE m.release_id = _development_release.id
  ;
  return _testing_release;
END;
$function$
]]></string>
			<input_param name="id" jt="-5" type="int8" />
			<input_param name="project_id" jt="-5" type="int8" />
			<input_param name="name" jt="12" type="text" />
			<input_param name="number" jt="12" type="text" />
			<input_param name="status" jt="1111" type="&quot;pde&quot;.&quot;release_status&quot;" />
			<input_param name="ddl_up" jt="12" type="text" />
			<input_param name="ddl_down" jt="12" type="text" />
			<input_param name="parent_release_id" jt="-5" type="int8" />
			<input_param name="locked" jt="-7" type="bool" />
			<input_param name="_project_id" jt="-5" type="int8" />
		</procedure>
		<procedure name="stash" id="Procedure_2b4e0f3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pde.stash()
 RETURNS pde.release
 LANGUAGE plpgsql
 STRICT SECURITY DEFINER
AS $function$
DECLARE
  _release pde.release;
BEGIN
  SELECT *
  INTO _release
  FROM pde.release
  WHERE status = 'Development'
  ;
  IF _release.id IS NULL THEN
    RAISE EXCEPTION 'Cannot stash because there is no development release';
  END IF;
  
  UPDATE pde.release SET
    status = 'Stashed'
  WHERE id = minor_id
  RETURNING *
  INTO _release
  ;
  return _release;
END;
$function$
]]></string>
			<input_param name="id" jt="-5" type="int8" />
			<input_param name="project_id" jt="-5" type="int8" />
			<input_param name="name" jt="12" type="text" />
			<input_param name="number" jt="12" type="text" />
			<input_param name="status" jt="1111" type="&quot;pde&quot;.&quot;release_status&quot;" />
			<input_param name="ddl_up" jt="12" type="text" />
			<input_param name="ddl_down" jt="12" type="text" />
			<input_param name="parent_release_id" jt="-5" type="int8" />
			<input_param name="locked" jt="-7" type="bool" />
		</procedure>
		<trigger name="tg_after_insert_pde_project" table="pde_project" id="Trigger_4c89c93" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER tg_after_insert_pde_project AFTER INSERT ON pde.pde_project FOR EACH ROW EXECUTE PROCEDURE pde.fn_create_project_releases()]]></string>
		</trigger>
		<trigger name="tg_timestamp_after_update_patch" table="patch" id="Trigger_26067c" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER tg_timestamp_after_update_patch AFTER INSERT OR UPDATE ON pde.patch FOR EACH ROW EXECUTE PROCEDURE pde.fn_update_release_number()]]></string>
		</trigger>
		<trigger name="tg_timestamp_before_update_patch" table="patch" id="Trigger_357f44c" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER tg_timestamp_before_update_patch BEFORE INSERT OR UPDATE ON pde.patch FOR EACH ROW EXECUTE PROCEDURE pde.fn_timestamp_update_patch()]]></string>
		</trigger>
		<trigger name="tg_timestamp_update_artifact" table="artifact" id="Trigger_307b642" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER tg_timestamp_update_artifact BEFORE INSERT OR UPDATE ON pde.artifact FOR EACH ROW EXECUTE PROCEDURE pde.fn_timestamp_update_artifact()]]></string>
		</trigger>
		<trigger name="tg_timestamp_update_minor" table="minor" id="Trigger_2993384" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER tg_timestamp_update_minor BEFORE INSERT OR UPDATE ON pde.minor FOR EACH ROW EXECUTE PROCEDURE pde.fn_timestamp_update_minor()]]></string>
		</trigger>
	</schema>
	<connector name="soro-sales" database="PostgreSQL" driver_class="org.postgresql.Driver" driver_jar="postgresql-42.2.2.jar" driver_desc="Standard" host="0.0.0.0" port="5432" instance="phile" user="soro" passwd="c29ybyRTZWNyZXQ=" />
	<connector name="soro-sales" database="PostgreSQL" driver_class="org.postgresql.Driver" driver_jar="postgresql-42.2.2.jar" driver_desc="Standard" host="0.0.0.0" port="5432" instance="phile" user="soro" passwd="c29ybyRTZWNyZXQ=" />
	<layout name="Default Layout" id="Layout_2d3ef4c" show_relation="columns" >
		<entity schema="pde" name="minor" color="bfd4f5" x="930" y="270" />
		<entity schema="pde" name="artifact" color="bfd4f5" x="300" y="270" />
		<entity schema="pde" name="artifact_relationship" color="c1d8ee" x="45" y="285" />
		<entity schema="pde" name="patch" color="bfd4f5" x="615" y="270" />
		<entity schema="pde" name="major" color="bfd4f5" x="1260" y="285" />
		<entity schema="pde" name="pde_project" color="bfd4f5" x="1245" y="75" />
		<entity schema="pde" name="schema" color="c1d8ee" x="300" y="60" />
		<entity schema="pde" name="artifact_type" color="bfd4f5" x="315" y="540" />
		<entity schema="pde" name="artifact_type_relationship" color="c1d8ee" x="45" y="555" />
		<entity schema="pde" name="test" color="c1d8ee" x="930" y="615" />
		<entity schema="pde" name="release" color="bfd4f5" x="915" y="45" />
	</layout>
</project>